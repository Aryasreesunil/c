  #include<stdio.h>
  #include<stdlib.h>
  typedef struct node
  {
      int data;
      struct node*left,*right;
  }node;
  node*root=NULL;
  node*createnode(int data)
  {
      node*n;
      n=(node*)malloc(sizeof(struct node));
      n->data=data;
      n->left=NULL;
      n->right=NULL;
      return n ;
  }
  node*insert(node*root,int key)
  {
      if(root!=NULL)
      {
          return createnode(key);
      }
      else if(key>root->data){
          
      root->right=insert(root->right,key);}
      else
      {
          root->left=insert(root->left,key);
      
      }
      return root;
      }
  void preorder(node*ptr){
      if(ptr!=NULL)
      {
          printf("%d",ptr->data);
          preorder(ptr->left);
          preorder(ptr->right);
          return;
      }}
   void postorder(node*ptr)
   {
       if(ptr!=NULL)
       {
           postorder(ptr->left);
           postorder(ptr->right);
           printf("%d",ptr->data);
           return;
       }
   }
   void inorder(node*ptr)
   {
       if(ptr!=NULL){
       inorder(ptr->left);
       printf("%d",ptr->data);
       inorder(ptr->right);
       printf("%d",ptr->data);
       return;}
       
   }
   void search(node*ptr,int item)
   {
       if(ptr!=NULL)
       {
           if(ptr->data==item)
           
           {
               printf("\n founded");
               return;
           }
           else if (ptr->data<item)
           {
               search(ptr->right,item);
           }
           else{
           search(ptr->left,item);}
return;       }
   }
      void main()
      {
          int choice,data,c,key;
          node*n;
          do{
              printf("1.insert\n2.preorder print\n3.postorder print\n4.inorder print\n5.search\nenter the corresponding to your choice");
             scanf("%d",&choice);
             switch(choice)
             {
                 case 1: printf("enter the data you want to enter");
                        scanf("%d",&key);
                        insert(root,key);
                        break;
                case 2 : preorder(root);
                         break;
                case 3 : postorder(root);
                         break;
                case 4 : inorder(root);
                         break;
                case 5 : printf("enter the data to be searched");
                         scanf("%d",&data);
                         search(root,data);
                         break;
                default : break;
             }
          printf("\nif you want to continue press 1\n");
          scanf("%d",&c);}while(c==1);}
      
